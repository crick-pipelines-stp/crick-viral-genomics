params {
    // Input
    sample_sheet = null

    // Pipeline options
    generate_reads = false

    // Data generation options
    seq_sim_ref_dir = "$projectDir/tests/data/seq_sim/fasta"
    seq_sim_config = "$projectDir/assets/seq_sim_default_config.yml"
    seq_sim_profile = "illumina_pe_nextera"
    seq_sim_num_reads = 1000

    // Boilerplate options
    outdir           = "./results"
    tracedir         = "${params.outdir}/pipeline_info"
    publish_dir_mode = "symlink"
    monochrome_logs  = false
    debug            = false
    ignore_params    = ""

    // Config options
    custom_config_version = "master"
    custom_config_base    = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"

    // Max resource options
    max_memory = "128.GB"
    max_cpus   = 16
    max_time   = "240.h"
}

// Load resourse labels 
// includeConfig "conf/base.config"

// Load pipeline switching logic
// includeConfig "conf/logic.config"

// Load nf-core custom profiles from different institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

profiles {
    debug {
        dumpHashes             = true
        process.beforeScript   = 'echo $HOSTNAME'
        cleanup                = false
        nextflow.enable.configProcessNamesValidation = true
    }
    docker {
        docker.enabled         = true
        conda.enabled          = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
        docker.runOptions      = '-u $(id -u):$(id -g)'
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    arm {
        includeConfig 'conf/arm.config'
    }
    test { includeConfig "conf/test.config" }
}

docker.registry      = "quay.io"
singularity.registry = "quay.io"

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

def trace_timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'pipelines-technology/wic-viral-assembler'
    author          = """Chris Cheshire, Alex Byrne"""
    homePage        = 'https://github.com/crick-pipelines-stp/wic-viral-assembler'
    description     = """Assembly and analysis of viral genomes"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=24.04.2'
    version         = '1.0'
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
